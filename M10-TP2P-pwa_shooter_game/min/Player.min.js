class Player extends Character{constructor(game){const height=PLAYER_HEIGHT*game.width/100,width=PLAYER_WIDTH*game.width/100,x=game.width/2-width/2,y=game.height-height,speed=PLAYER_SPEED,myImage=PLAYER_PICTURE,myImageDead=PLAYER_PICTURE_DEAD;super(game,width,height,x,y,speed,myImage,myImageDead),this.lifes=this.game.lifes,this.updatesPerShot=20,this.updatesPerShotCount=0,this.dragging=!1,this.initDraggingAbility()}update(){if(document.querySelector(".lifes .amount").innerHTML=this.lifes,!this.dead&&!this.dragging)switch(this.game.keyPressed){case KEY_LEFT:this.x>this.speed&&(this.x-=this.speed);break;case KEY_RIGHT:this.x<this.game.width-this.width-this.speed&&(this.x+=this.speed);break;case KEY_SHOOT:this.game.shoot(this)}this.dead||(this.updatesPerShotCount++,this.updatesPerShotCount%this.updatesPerShot==0&&(this.game.shoot(this),shoot_status&&shoot_fx.play()))}initDraggingAbility(){let interactable;interact(this.myImageContainer).draggable({modifiers:[interact.modifiers.restrictRect({restriction:"parent"})],listeners:{start:ev=>{console.log(ev)},move:ev=>{this.dead||(this.x+=ev.dx)},end:ev=>{ev.target.style.transform=`translate(${this.x}px)`}}})}die(){console.log(this.game.lifes),!this.dead&&this.lifes>0?(this.lifes--,setTimeout(()=>{this.myImage.src=PLAYER_PICTURE,this.dead=!1,this.dragging=!1},2e3),this.myImage.src=this.myImageDead,this.dead=!0,console.log(this.lifes),super.die()):0===this.lifes&&this.game.endGame()}}